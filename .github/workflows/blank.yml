# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    env:
          working-directory: ./spring

    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      working-directory: ${{ env.working-directory }}
    - name: Build with Gradle
      run: ./gradlew bootJar
      working-directory: ${{ env.working-directory }}
    - name: Download Dockerfile
      run: |
        # jq 명령어를 사용하여 Dockerfile 부분 추출
        dockerfile_content=$(curl -s https://api.github.com/repos/welcomePlayground/be2/contents/spring/Dockerfile | jq -r '.content' | tr -d '"' | base64 -d)
        # 추출한 Dockerfile 내용 출력
        echo "$dockerfile_content" > Dockerfile
      working-directory: ${{ env.working-directory }}
    - name: Login to Docker registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: docker build and push
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.repo }}2 .
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.repo }}2
      working-directory: ${{ env.working-directory }}
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          sudo docker stop ${{ secrets.SERVER_DOCKER_NAME }}2
          sudo docker rm ${{ secrets.SERVER_DOCKER_NAME }}2
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.repo }}2
          sudo docker run -d --name ${{ secrets.SERVER_DOCKER_NAME }}2 -p ${{ secrets.SERVER_DOCKER_PORT2 }}:${{ secrets.SERVER_DOCKER_PORT2 }} ${{ secrets.DOCKER_USERNAME }}/${{ secrets.repo }}2
